package worms.model;

import java.util.ArrayList;

public class StatementAction extends Statement {
	
	private final StatementAction.ActionTypes actionType;
	
	public StatementAction.ActionTypes getActionType() {
		return actionType;
	}

	public StatementAction() {
		super(new ArrayList<Statement>(), new ArrayList<Expression>());
		this.actionType = null;
	}
	
	public StatementAction( Expression e ) {
		super(new ArrayList<Statement>(), e); //TODO pass "e" as an arraylist
		this.actionType = null;
	}
	
	public static enum ActionTypes {
		TURN,
		MOVE,
		JUMP,
		TOGGLEWEAP,
		FIRE,
		SKIP
	}

	@Override
	public void execute() {
		Statement statement = this;
		while ( statement.hasAParentStatement() ) {
			statement = statement.getParentStatement();
		}
		Program program = statement.getProgram();
		Worm worm = program.getWorm();
		
		if ( getActionType() == StatementAction.ActionTypes.TURN )
			worm.turn((double)getExpressions().get(0).evaluate().getValue());
		if ( getActionType() == StatementAction.ActionTypes.MOVE )
			worm.move();
		if ( getActionType() == StatementAction.ActionTypes.JUMP )
			worm.jump(); //TODO what timestep?
		if ( getActionType() == StatementAction.ActionTypes.TOGGLEWEAP )
			worm.equipNextWeapon();
		if ( getActionType() == StatementAction.ActionTypes.FIRE )
			worm.shoot((double)getExpressions().get(0).evaluate().getValue());
		if ( getActionType() == StatementAction.ActionTypes.SKIP )
			// do nothing
		program.typeErrorOccurred();

	}

	@Override
	public boolean isWellFormed() {
		return true;
	}

}
